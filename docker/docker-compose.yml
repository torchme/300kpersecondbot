version: '3.1'

services:
    db:
        container_name: pg_container
        image: postgres
        restart: always
        env_file:
            - ../.env
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            PGDATA: /data/postgres
        volumes:
            - postgres:/data/postgres
        ports:
            - "5432:5432"
        networks:
            - postgres

    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: root
        volumes:
            - my-data:/var/lib/pgadmin
        ports:
            - "5050:80"
        networks:
            - postgres

    assist_service:
        container_name: arxiv_service
        build:
            context: ../
            dockerfile: docker/Dockerfile
            args:
                - PREFECT_API_KEY=${PREFECT_API_KEY}
                - PREFECT_WORKSPACE_ID=${PREFECT_WORKSPACE_ID}
        ports:
            - "8501:8501"
        env_file:
            - ../.env
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            TG_TOKEN: ${TG_TOKEN}
            PREFECT_API_KEY: ${PREFECT_API_KEY}
            CHAT_ID: ${CHAT_ID}
        volumes:
            - assist_data:/var/lib/assist_data
        networks:
            - postgres
        entrypoint: /bin/bash
        command:
            - -c
            - |
                source /app/.env &&
                make auth &&
                make run

volumes:
    postgres:
    my-data:
    assist_data:

networks:
    postgres:
        driver: bridge
